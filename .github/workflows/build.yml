name: Build APK with Buildozer

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v2

      # Step 2: Set up Python 3.12
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Step 3: Install required dependencies
      - name: Install required dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libssl-dev \
            libffi-dev \
            python3-dev \
            zip \
            unzip \
            openjdk-8-jdk \
            libncurses5-dev \
            libstdc++6 \
            zlib1g-dev \
            liblzma-dev \
            pkg-config \
            libsqlite3-dev \
            libbz2-dev \
            libreadline-dev \
            libxml2-dev \
            libxslt1-dev \
            tk-dev \
            python3-setuptools \
            python3-pip \
            curl \
            git \
            python3-distutils  # Install distutils explicitly

      # Step 4: Install distutils manually from source if it's missing
      - name: Ensure distutils is available
        run: |
          if ! python3 -c "import distutils" &>/dev/null; then
            echo "distutils not found, installing manually"
            curl -LO https://github.com/python/cpython/archive/refs/tags/v3.12.8.tar.gz
            tar -xvf v3.12.8.tar.gz
            cd cpython-3.12.8/Lib
            sudo python3 setup.py install
          fi

      # Step 5: Set distutils path (add distutils to PATH)
      - name: Add distutils to PATH
        run: |
          export DISTUTILS_PATH=$(python3 -c "import distutils.sysconfig; print(distutils.sysconfig.get_python_lib())")
          echo "Adding distutils to PATH"
          echo "PATH=$DISTUTILS_PATH:$PATH" >> $GITHUB_ENV

      # Step 6: Install JDK 17 (to resolve sdkmanager errors)
      - name: Install JDK 17
        run: |
          sudo apt-get install -y openjdk-17-jdk
          java -version

      # Step 7: Set JAVA_HOME environment variable
      - name: Set JAVA_HOME to JDK 17
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=\$JAVA_HOME/bin:\$PATH" >> $GITHUB_ENV

      # Step 8: Install unzip and make sure it's on the path
      - name: Ensure unzip is available
        run: |
          which unzip || echo "unzip not found"
          echo "PATH=\$PATH:/usr/bin" >> $GITHUB_ENV

      # Step 9: Set up Android SDK manually
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

      # Step 10: Install Android SDK components directly using sdkmanager
      - name: Install Android SDK components
        run: |
          sdkmanager --update
          sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30"

      # Step 11: Force Accept SDK licenses
      - name: Accept SDK licenses
        run: |
          yes | sdkmanager --licenses

      # Step 12: Set permissions for SDK folder
      - name: Set permissions for SDK folder
        run: |
          sudo chown -R $USER:$USER /usr/local/lib/android/sdk
          sudo chmod -R 755 /usr/local/lib/android/sdk

      # Step 13: Verify Android SDK installation
      - name: Verify Android SDK installation
        run: |
          echo "Listing installed SDK components"
          sdkmanager --list

      # Step 14: Install Buildozer and Cython
      - name: Install Buildozer and Cython
        run: |
          python -m pip install cython
          python -m pip install buildozer

      # Step 15: Build APK
      - name: Build APK
        run: |
          buildozer android debug

      # Step 16: Upload APK as an artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-apk
          path: bin/*.apk
